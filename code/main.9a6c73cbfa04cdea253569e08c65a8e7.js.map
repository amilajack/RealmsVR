{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/actions/user.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/lobby/floor.js","webpack:///./src/components/panel.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/renderer.jsx","webpack:///./src/actions/lobby.js","webpack:///./src/components/lobby/session.jsx","webpack:///./src/routes/lobby.jsx","webpack:///./src/components/realm/loader.jsx","webpack:///./src/actions/realm.js","webpack:///./src/components/realm/mesher.jsx","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/components/realm/renderer.jsx","webpack:///./src/routes/realm.jsx","webpack:///./src/routes/404.jsx","webpack:///./src/routes/index.jsx","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","refreshSession","session","type","types","payload","dispatch","catch","locales","en","NotFound","description","goBack","User","signIn","signOut","es","availableLocales","Object","keys","defaultLocale","translations","forEach","locale","merge","lobbyReducer","combineReducers","realms","state","arguments","length","undefined","action","realmReducer","geometry","id","_id","name","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","profile","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Route","styled","div","withConfig","displayName","componentId","loadingBarStyle","backgroundColor","zIndex","Layout","children","react_default","a","createElement","build_default","style","layout_Route","propTypes","PropTypes","node","isRequired","Hands","_this","hands_classCallCheck","mesh","pointerMesh","setup","_possibleConstructorReturn","_getPrototypeOf","call","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","scale","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","premultiply","matrixWorldNeedsUpdate","pressed","Renderer","props","renderer_classCallCheck","renderer_getPrototypeOf","canvas","React","createRef","camera","PerspectiveCamera","clock","Clock","Raycaster","far","room","hands","head","offset","rotation","Quaternion","scene","Scene","fog","FogExp2","setRGB","onBeforeRender","bind","renderer_assertThisInitialized","onAnimationTick","onResize","Component","current","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","window","devicePixelRatio","setClearColor","setupVR","addEventListener","setAnimationLoop","dispose","forceContextLoss","removeEventListener","animation","delta","getDelta","time","oldTime","update","render","decompose","copy","sub","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Floor","floor_classCallCheck","PlaneGeometry","rotateX","Math","PI","Color","setHex","random","floor_possibleConstructorReturn","floor_getPrototypeOf","vertexColors","VertexColors","Panel","anisotropy","panel_classCallCheck","document","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","PlaneBufferGeometry","map","backplate","rotateY","context","getContext","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","Realm","onPointer","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","draw","isHover","_get","prototype","font","textAlign","textBaseline","fillText","Menu","_this2","history","hover","_ref3","_this3","remove","panel","_objectSpread","_ref4","isDown","setHover","location","slug","lookAt","LobbyRenderer","renderer_get","lobby_renderer_getPrototypeOf","_this$props","fetchRealms","floor","capabilities","getMaxAnisotropy","page","hit","intersectObjects","distance","object","z","arrayOf","shape","string","func","withRouter","connect","_ref$page","Wrapper","Session","session_classCallCheck","session_getPrototypeOf","loginWithGoogle","session_assertThisInitialized","onMessage","PureComponent","popupWatcher","clearInterval","data","indexOf","screenX","screenY","left","screen","top","win","open","setInterval","postMessage","signout","onClick","ti","react_redux_i18n_build","value","bool","Lobby","lobby_Wrapper","lobby_renderer","lobby_session","Loader","match","params","reset","realm_objectSpread","Mesher","mesher_classCallCheck","mesher_getPrototypeOf","mesher_assertThisInitialized","worker","Worker","onmessage","terminate","updateGeometry","number","instanceOf","_ref3$realm","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_getPrototypeOf","block","strip","blockColor","picker_get","save","getHexString","grdWhite","createLinearGradient","addColorStop","grdBlack","restore","grd","rect","isStrip","imageData","getImageData","Voxels","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","instance","updateMatrix","index","normal","attributes","setArray","addAttribute","BufferAttribute","setIndex","computeBoundingSphere","RealmRenderer","realm_renderer_get","realm_renderer_getPrototypeOf","picker","intersects","currentGeometry","resize","renderer_toConsumableArray","_this$props2","updateVoxels","_map2","renderer_slicedToArray","axis","sin","translateZ","updateMatrixWorld","Float32Array","_ref2$realm","getState","_getState$realm","realm_slicedToArray","randomized","min","max","round","r","g","b","realm_Wrapper","loader","mesher","realm_renderer","Status","Description","Alternative","_404_Wrapper","Link","to","pathname","store","storedLocale","browserLocale","component","requiresAuth","requiresNoAuth","rest","_objectWithoutProperties","isForbidden","_extends","Redirect","Root","layout","Switch","routes_Route","exact","path","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","hash","e","preventDefault","mount","getElementById","react_redux_es","Router","routes","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.3eaa78a7d520e2c771a0.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function refreshSession(session) {\n  if (session) {\n    return {\n      type: types.USER_REFRESH_SESSION_FULFILLED,\n      payload: session,\n    };\n  }\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  NotFound: {\n    description: 'This is not the web page you\\'re looking for.',\n    goBack: 'Take me back home',\n  },\n  User: {\n    signIn: 'Sign-In',\n    signOut: 'Sign-Out',\n  },\n};\n","export default {\n  NotFound: {\n    description: 'Esta no es la página que estás buscando.',\n    goBack: 'Volver al inicio',\n  },\n  User: {\n    signIn: 'Iniciar sesión',\n    signOut: 'Cerrar sesión',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY:\n      return action.payload.geometry;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return action.payload.profile;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\n\nconst Route = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nconst Layout = ({ children }) => (\n  <div>\n    <LoadingBar style={loadingBarStyle} />\n    <Route>\n      { children }\n    </Route>\n  </div>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Quaternion,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  Vector3,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.camera = new PerspectiveCamera(90, 1, 0.1, 1024);\n    this.camera.position.set(0, 1.6, 0);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.raycaster.far = 32;\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.head = {\n      offset: new Vector3(),\n      position: new Vector3(),\n      rotation: new Quaternion(),\n      scale: new Vector3(),\n    };\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.015);\n    this.scene.fog.color.setRGB(0, 0, 0.1);\n    this.scene.onBeforeRender = this.onBeforeRender.bind(this);\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n    window.addEventListener('resize', this.onResize, false);\n    renderer.setAnimationLoop(this.onAnimationTick);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentWillUnmount() {\n    const { renderer } = this;\n    renderer.dispose();\n    renderer.forceContextLoss();\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n    } = this;\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const { head, room } = this;\n    camera.matrixWorld\n      .decompose(\n        head.position,\n        head.rotation,\n        head.scale\n      );\n    head.offset\n      .copy(head.position)\n      .sub(room.position);\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Floor extends Mesh {\n  constructor() {\n    const size = 256;\n    const geometry = new PlaneGeometry(size, size, size, size);\n    geometry.rotateX(Math.PI * -0.5);\n    const color = new Color();\n    geometry.faces.forEach((face, i) => {\n      if (i % 2 === 1) {\n        face.color.copy(color);\n      } else {\n        face.color.setHex(0x555555);\n        face.color.offsetHSL(0, 0, Math.random() * -0.1);\n        color.copy(face.color);\n      }\n    });\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      })\n    );\n  }\n}\n\nexport default Floor;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 512;\n    renderer.height = 512;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(1, 1),\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    {\n      const backplate = new Mesh(\n        new PlaneBufferGeometry(1, 1),\n        new MeshBasicMaterial({\n          color: 0x111111,\n        })\n      );\n      backplate.geometry.rotateY(Math.PI);\n      this.add(backplate);\n    }\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n}\n\nexport default Panel;\n","import {\n  Object3D,\n} from 'three';\nimport Panel from '@/components/panel';\n\nclass Realm extends Panel {\n  constructor({ anisotropy, name, onPointer }) {\n    super({ anisotropy });\n    this.scale.set(0.25, 0.25, 1);\n    this.name = name;\n    this.onPointer = onPointer;\n    this.draw();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = isHover ? '#555' : '#333';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '80px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({ anisotropy, history }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.position.set(0, 1, -1);\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  update(realms) {\n    const {\n      anisotropy,\n      children,\n      // history,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    const offset = 0.25 + realms.length * -0.25;\n    realms.forEach((realm, i) => {\n      const panel = new Realm({\n        ...realm,\n        anisotropy,\n        onPointer: ({ hand, isDown }) => {\n          this.setHover({ hand, realm: panel });\n          if (isDown) {\n            // history.push(`/${realm.slug}`);\n            window.location = `/${realm.slug}`;\n          }\n        },\n      });\n      panel.position.set(\n        offset + (i * 0.5),\n        0,\n        0\n      );\n      panel.lookAt(0, 0.5, 1);\n      this.add(panel);\n    });\n  }\n}\n\nexport default Menu;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchRealms } from '@/actions/lobby';\nimport Renderer from '@/components/renderer';\nimport Floor from './floor';\nimport Menu from './menu';\n\nclass LobbyRenderer extends Renderer {\n  componentDidMount() {\n    super.componentDidMount();\n    const { renderer, scene } = this;\n    const { fetchRealms, history } = this.props;\n    this.floor = new Floor();\n    scene.add(this.floor);\n    this.menu = new Menu({\n      anisotropy: renderer.capabilities.getMaxAnisotropy(),\n      history,\n    });\n    scene.add(this.menu);\n    fetchRealms({ page: 0 });\n  }\n\n  componentWillReceiveProps({ realms }) {\n    const { realms: currentRealms } = this.props;\n    if (realms !== currentRealms) {\n      this.menu.update(realms);\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    super.onBeforeRender(renderer, scene, camera);\n    const {\n      hands,\n      menu,\n      raycaster,\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.children)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n      });\n    });\n  }\n}\n\nLobbyRenderer.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n};\n\nexport default withRouter(connect(\n  ({\n    lobby: {\n      realms,\n    },\n  }) => ({\n    realms,\n  }),\n  {\n    fetchRealms,\n  }\n)(LobbyRenderer));\n","import * as types from './types';\nimport API from '@/services/api';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function fetchRealms({\n  page = 0,\n}) {\n  return {\n    type: types.LOBBY_FETCH_REALMS,\n    payload: API.fetch({\n      endpoint: `realms/${page}`,\n    }),\n  };\n}\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { TiEject, TiSocialGooglePlus } from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\nimport styled from 'styled-components';\nimport { refreshSession, signout } from '@/actions/user';\nimport API from '@/services/api';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  > button {\n    display: flex;\n    align-items: center;\n    outline: 0;\n    font-family: inherit;\n    font-size: 1.2rem;\n    font-weight: 700;\n    width: 150px;\n    padding: 0.5rem 1rem;\n    > svg {\n      margin-right: 0.5rem;\n    }\n  }\n`;\n\nclass Session extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.loginWithGoogle = this.loginWithGoogle.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n  }\n\n  componentWillUnmount() {\n    const { popupWatcher } = this;\n    if (popupWatcher) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(popupWatcher);\n      delete this.popupWatcher;\n    }\n  }\n\n  onMessage({ origin, data: { session } }) {\n    const { popupWatcher } = this;\n    const { refreshSession } = this.props;\n    if (API.baseURL.indexOf(origin) === 0) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(popupWatcher);\n      delete this.popupWatcher;\n      if (session) {\n        refreshSession(session);\n      }\n    }\n  }\n\n  loginWithGoogle({ screenX, screenY }) {\n    const w = 512;\n    const h = 512;\n    const left = (screenX || (window.screen.width / 2)) - w;\n    const top = (screenY || (window.screen.height / 2));\n    const win = window.open(\n      `${API.baseURL}user/google`,\n      'loginWithGoogle',\n      `width=${w},height=${h},top=${top},left=${left}`\n    );\n    if (this.popupWatcher) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(this.popupWatcher);\n    }\n    this.popupWatcher = setInterval(() => {\n      if (!win.window) {\n        clearInterval(this.popupWatcher);\n        delete this.popupWatcher;\n        return;\n      }\n      win.postMessage(true, API.baseURL);\n    }, 100);\n    window.addEventListener('message', this.onMessage, false);\n  }\n\n  render() {\n    const { isAuth, signout } = this.props;\n    return (\n      <Wrapper>\n        {isAuth ? (\n          <button\n            type=\"button\"\n            onClick={signout}\n          >\n            <TiEject />\n            <Translate value=\"User.signOut\" />\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            onClick={this.loginWithGoogle}\n          >\n            <TiSocialGooglePlus />\n            <Translate value=\"User.signIn\" />\n          </button>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nSession.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  refreshSession: PropTypes.func.isRequired,\n  signout: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    user: { isAuth },\n  }) => ({\n    isAuth,\n  }),\n  {\n    refreshSession,\n    signout,\n  }\n)(Session);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Renderer from '@/components/lobby/renderer';\nimport Session from '@/components/lobby/session';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst Lobby = () => (\n  <Wrapper>\n    <Renderer />\n    <Session />\n  </Wrapper>\n);\n\nexport default Lobby;\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetch, reset } from '@/actions/realm';\n\nclass Loader extends Component {\n  componentWillMount() {\n    const {\n      match: { params: { slug } },\n      fetch,\n    } = this.props;\n    fetch(slug);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentWillUnmount() {\n    const { reset } = this.props;\n    reset();\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLoader.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n};\n\nexport default withRouter(connect(\n  () => ({}),\n  {\n    fetch,\n    reset,\n  }\n)(Loader));\n","import * as types from './types';\nimport API from '@/services/api';\n\nexport function create({\n  name,\n}) {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      body: {\n        name,\n      },\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function fetch(slug) {\n  return {\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then(voxels => ({\n            ...realm,\n            voxels: new Uint32Array(voxels),\n          }))\n      )),\n  };\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateGeometry(geometry) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: { geometry },\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const { realm: { size, voxels: current } } = getState();\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateGeometry } from '@/actions/realm';\nimport Worker from '@/services/mesher.worker';\n\nclass Mesher extends Component {\n  constructor(props) {\n    super(props);\n    this.onMessage = this.onMessage.bind(this);\n  }\n\n  componentWillMount() {\n    const worker = new Worker();\n    worker.onmessage = this.onMessage;\n    this.worker = worker;\n  }\n\n  componentWillReceiveProps({ size, voxels }) {\n    const { worker } = this;\n    const { voxels: currentVoxels } = this.props;\n    if (voxels !== currentVoxels) {\n      worker.postMessage({\n        size,\n        voxels,\n      });\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentWillUnmount() {\n    const { worker } = this;\n    worker.terminate();\n  }\n\n  onMessage({ data: { geometry } }) {\n    const { updateGeometry } = this.props;\n    updateGeometry(geometry);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nMesher.propTypes = {\n  size: PropTypes.number.isRequired,\n  voxels: PropTypes.instanceOf(Uint32Array).isRequired,\n  updateGeometry: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      size,\n      voxels,\n    },\n  }) => ({\n    size,\n    voxels,\n  }),\n  {\n    updateGeometry,\n  }\n)(Mesher);\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\n\nclass Picker extends Panel {\n  constructor({ anisotropy }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.draw();\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.3;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.35, renderer.height * 0.85);\n      ctx.rect(0, 0, width, height);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip].forEach(({\n      x,\n      y,\n      width,\n      height,\n    }, i) => {\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      const isStrip = i === 1;\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (isStrip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor() {\n    super();\n    this.geometry = new BufferGeometry();\n    this.material = new MeshBasicMaterial({\n      vertexColors: VertexColors,\n    });\n    this.visible = false;\n  }\n\n  resize(size) {\n    const { children, geometry, material } = this;\n    const radius = 8;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const instance = new Mesh(\n            geometry,\n            material\n          );\n          instance.matrixAutoUpdate = false;\n          instance.position.set(x * size, y * size, z * size);\n          instance.updateMatrix();\n          this.add(instance);\n        }\n      }\n    }\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    this.visible = true;\n  }\n}\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from './picker';\nimport Voxels from './voxels';\n\nclass RealmRenderer extends Renderer {\n  componentDidMount() {\n    super.componentDidMount();\n    const { hands, renderer, scene } = this;\n    this.picker = new Picker({\n      anisotropy: renderer.capabilities.getMaxAnisotropy(),\n    });\n    hands.children[1].add(this.picker);\n    this.intersects = [this.picker];\n    this.voxels = new Voxels();\n    scene.add(this.voxels);\n  }\n\n  componentWillReceiveProps({ geometry, size }) {\n    const { picker, room, voxels } = this;\n    const { geometry: currentGeometry, size: currentSize } = this.props;\n    if (size !== currentSize) {\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.children,\n      ];\n    }\n    if (geometry !== currentGeometry) {\n      voxels.update(geometry);\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    super.onBeforeRender(renderer, scene, camera);\n    const { size, updateVoxels } = this.props;\n    const {\n      hands,\n      head,\n      intersects,\n      picker,\n      raycaster,\n      room,\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        const offset = {\n          x: -head.offset.x,\n          y: 0,\n          z: -head.offset.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = Math.floor(point[axis] - offset[axis]);\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n}\n\nRealmRenderer.propTypes = {\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  size: PropTypes.number,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    updateVoxels,\n  }\n)(RealmRenderer);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Loader from '@/components/realm/loader';\nimport Mesher from '@/components/realm/mesher';\nimport Renderer from '@/components/realm/renderer';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst Realm = () => (\n  <Wrapper>\n    <Loader />\n    <Mesher />\n    <Renderer />\n  </Wrapper>\n);\n\nexport default Realm;\n","import React from 'react';\nimport { TiArrowBack } from 'react-icons/ti';\nimport { Translate } from 'react-redux-i18n';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Status = styled.div`\n  font-size: 6em;\n  line-height: 0.8em;\n  color: #656565;\n  margin-bottom: 2rem;\n`;\n\nconst Description = styled.div`\n  font-size: 1.5em;\n`;\n\nconst Alternative = styled.div`\n  margin: 2rem 0 4rem;\n  > a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    font-size: 1.2em;\n    color: inherit;\n    > svg {\n      margin-right: 0.5rem;\n    }\n  }\n`;\n\nconst NotFound = () => (\n  <Wrapper>\n    <Status>\n      404\n    </Status>\n    <Description>\n      <Translate value=\"NotFound.description\" />\n    </Description>\n    <Alternative>\n      <Link to={{ pathname: '/' }}>\n        <TiArrowBack />\n        <Translate value=\"NotFound.goBack\" />\n      </Link>\n    </Alternative>\n  </Wrapper>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { Route as RouteComponent, Redirect, Switch } from 'react-router-dom';\nimport Layout from '@/layout';\nimport Lobby from './lobby';\nimport Realm from './realm';\nimport NotFound from './404';\n\nconst Route = connect(\n  ({ user: { isAuth } }) => ({ isAuth })\n)(({\n  component: Component,\n  isAuth,\n  requiresAuth,\n  requiresNoAuth,\n  ...rest\n}) => {\n  const isForbidden = (\n    (requiresAuth && !isAuth)\n    || (requiresNoAuth && isAuth)\n  );\n  return (\n    <RouteComponent\n      {...rest}\n      render={props => (\n        (isForbidden) ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Component {...props} />\n        )\n      )}\n    />\n  );\n});\n\nconst Root = () => (\n  <Layout>\n    <Switch>\n      <Route exact path=\"/\" component={Lobby} />\n      <Route exact path=\"/404\" component={NotFound} />\n      <Route exact path=\"/:slug\" component={Realm} />\n      <Route path=\"*\" component={NotFound} />\n    </Switch>\n  </Layout>\n);\n\nexport default hot(module)(Root);\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Root from '@/routes';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Root />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.197743694d6b7b6d94d4.js\");\n};"],"sourceRoot":""}