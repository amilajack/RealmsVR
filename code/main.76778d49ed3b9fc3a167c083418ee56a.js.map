{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/actions/user.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/session.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/lobby/floor.js","webpack:///./src/components/panel.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/routes/lobby.js","webpack:///./src/actions/lobby.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/routes/realm.js","webpack:///./src/routes/index.jsx","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","refreshSession","session","type","types","payload","dispatch","catch","locales","en","NotFound","description","goBack","User","signIn","signOut","es","availableLocales","Object","keys","defaultLocale","translations","forEach","locale","merge","lobbyReducer","combineReducers","realms","state","arguments","length","undefined","action","realmReducer","geometry","id","_id","name","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","profile","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Hands","_this","hands_classCallCheck","mesh","pointerMesh","setup","_possibleConstructorReturn","_getPrototypeOf","call","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","scale","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","children","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","premultiply","matrixWorldNeedsUpdate","pressed","Renderer","props","renderer_classCallCheck","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","bind","renderer_assertThisInitialized","onResize","Component","current","camera","PerspectiveCamera","clock","Clock","Raycaster","far","room","hands","resetScene","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","window","devicePixelRatio","setClearColor","scene","fog","setAnimationLoop","addEventListener","setupVR","animation","delta","getDelta","time","oldTime","update","render","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","Scene","FogExp2","setRGB","react_default","a","createElement","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Wrapper","styled","div","withConfig","displayName","componentId","Session","session_classCallCheck","session_getPrototypeOf","loginWithGoogle","session_assertThisInitialized","onMessage","PureComponent","popupWatcher","removeEventListener","clearInterval","data","indexOf","_this2","screenX","screenY","left","screen","top","win","open","setInterval","postMessage","_this$props","signout","onClick","ti","react_redux_i18n_build","value","propTypes","PropTypes","bool","isRequired","func","connect","_ref3","loadingBarStyle","backgroundColor","zIndex","Layout","build_default","style","components_session","layout_Wrapper","node","Floor","floor_classCallCheck","PlaneGeometry","rotateX","Math","PI","Color","copy","setHex","random","floor_possibleConstructorReturn","floor_getPrototypeOf","vertexColors","VertexColors","Panel","anisotropy","panel_classCallCheck","document","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","PlaneBufferGeometry","map","backplate","rotateY","context","getContext","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","Realm","onPointer","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","draw","isHover","_get","prototype","font","textAlign","textBaseline","fillText","Menu","history","hover","_this3","remove","offset","panel","_objectSpread","_ref4","isDown","setHover","push","slug","lookAt","Lobby","fetchRealms","onBeforeRender","page","previousRealms","_this$renderer","hit","intersectObjects","distance","object","z","arrayOf","shape","string","instanceOf","_ref$page","mesher","Mesher","mesher_classCallCheck","promiseId","promises","worker","Worker","onmessage","Promise","resolve","_ref2$data","generateGeometry","generate","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_getPrototypeOf","rotation","block","strip","blockColor","picker_get","save","getHexString","grdWhite","createLinearGradient","addColorStop","grdBlack","restore","grd","rect","isStrip","imageData","getImageData","Voxels","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","instance","updateMatrix","index","normal","attributes","setArray","addAttribute","BufferAttribute","setIndex","computeBoundingSphere","match","params","picker","intersects","head","previousGeometry","previousSize","_this$props2","resize","realm_toConsumableArray","reset","_this$props3","updateVoxels","_map2","routes_realm_slicedToArray","axis","floor","sin","translateZ","updateMatrixWorld","Float32Array","number","_ref2$realm","realm_objectSpread","getState","_getState$realm","realm_slicedToArray","randomized","min","max","round","r","g","b","component","rest","_objectWithoutProperties","Route","_extends","store","storedLocale","browserLocale","Root","routes_classCallCheck","routes_possibleConstructorReturn","routes_getPrototypeOf","layout","components_renderer","Switch","routes_Scene","exact","path","Redirect","to","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","location","hash","e","preventDefault","mount","getElementById","react_redux_es","Router","routes","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.645e7327d6555fd75aab.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function refreshSession(session) {\n  if (session) {\n    return {\n      type: types.USER_REFRESH_SESSION_FULFILLED,\n      payload: session,\n    };\n  }\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  NotFound: {\n    description: 'This is not the web page you\\'re looking for.',\n    goBack: 'Take me back home',\n  },\n  User: {\n    signIn: 'Sign-In',\n    signOut: 'Sign-Out',\n  },\n};\n","export default {\n  NotFound: {\n    description: 'Esta no es la página que estás buscando.',\n    goBack: 'Volver al inicio',\n  },\n  User: {\n    signIn: 'Iniciar sesión',\n    signOut: 'Cerrar sesión',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return action.payload.profile;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.camera = new PerspectiveCamera(90, 1, 0.1, 1024);\n    this.camera.position.set(0, 1.6, 0);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.raycaster.far = 32;\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetScene();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n    } = this;\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetScene() {\n    this.room.position.set(0, 0, 0);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.015);\n    this.scene.fog.color.setRGB(0, 0, 0.1);\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { TiEject, TiSocialGooglePlus } from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\nimport styled from 'styled-components';\nimport { refreshSession, signout } from '@/actions/user';\nimport API from '@/services/api';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  > button {\n    display: flex;\n    align-items: center;\n    outline: 0;\n    font-family: inherit;\n    font-size: 1.2rem;\n    font-weight: 700;\n    width: 150px;\n    padding: 0.5rem 1rem;\n    > svg {\n      margin-right: 0.5rem;\n    }\n  }\n`;\n\nclass Session extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.loginWithGoogle = this.loginWithGoogle.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n  }\n\n  componentWillUnmount() {\n    const { popupWatcher } = this;\n    if (popupWatcher) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(popupWatcher);\n      delete this.popupWatcher;\n    }\n  }\n\n  onMessage({ origin, data: { session } }) {\n    const { popupWatcher } = this;\n    const { refreshSession } = this.props;\n    if (API.baseURL.indexOf(origin) === 0) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(popupWatcher);\n      delete this.popupWatcher;\n      if (session) {\n        refreshSession(session);\n      }\n    }\n  }\n\n  loginWithGoogle({ screenX, screenY }) {\n    const w = 512;\n    const h = 512;\n    const left = (screenX || (window.screen.width / 2)) - w;\n    const top = (screenY || (window.screen.height / 2));\n    const win = window.open(\n      `${API.baseURL}user/google`,\n      'loginWithGoogle',\n      `width=${w},height=${h},top=${top},left=${left}`\n    );\n    if (this.popupWatcher) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(this.popupWatcher);\n    }\n    this.popupWatcher = setInterval(() => {\n      if (!win.window) {\n        clearInterval(this.popupWatcher);\n        delete this.popupWatcher;\n        return;\n      }\n      win.postMessage(true, API.baseURL);\n    }, 100);\n    window.addEventListener('message', this.onMessage, false);\n  }\n\n  render() {\n    const { isAuth, signout } = this.props;\n    return (\n      <Wrapper>\n        {isAuth ? (\n          <button\n            type=\"button\"\n            onClick={signout}\n          >\n            <TiEject />\n            <Translate value=\"User.signOut\" />\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            onClick={this.loginWithGoogle}\n          >\n            <TiSocialGooglePlus />\n            <Translate value=\"User.signIn\" />\n          </button>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nSession.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  refreshSession: PropTypes.func.isRequired,\n  signout: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    user: { isAuth },\n  }) => ({\n    isAuth,\n  }),\n  {\n    refreshSession,\n    signout,\n  }\n)(Session);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Session from '@/components/session';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nconst Layout = ({ children }) => (\n  <div>\n    <LoadingBar style={loadingBarStyle} />\n    <Session />\n    <Wrapper>\n      { children }\n    </Wrapper>\n  </div>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Floor extends Mesh {\n  constructor() {\n    const size = 256;\n    const geometry = new PlaneGeometry(size, size, size, size);\n    geometry.rotateX(Math.PI * -0.5);\n    const color = new Color();\n    geometry.faces.forEach((face, i) => {\n      if (i % 2 === 1) {\n        face.color.copy(color);\n      } else {\n        face.color.setHex(0x555555);\n        face.color.offsetHSL(0, 0, Math.random() * -0.1);\n        color.copy(face.color);\n      }\n    });\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      })\n    );\n  }\n}\n\nexport default Floor;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 512;\n    renderer.height = 512;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(1, 1),\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    {\n      const backplate = new Mesh(\n        new PlaneBufferGeometry(1, 1),\n        new MeshBasicMaterial({\n          color: 0x111111,\n        })\n      );\n      backplate.geometry.rotateY(Math.PI);\n      this.add(backplate);\n    }\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n}\n\nexport default Panel;\n","import {\n  Object3D,\n} from 'three';\nimport Panel from '@/components/panel';\n\nclass Realm extends Panel {\n  constructor({ anisotropy, name, onPointer }) {\n    super({ anisotropy });\n    this.scale.set(0.25, 0.25, 1);\n    this.name = name;\n    this.onPointer = onPointer;\n    this.draw();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = isHover ? '#555' : '#333';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '80px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({ anisotropy, history }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.position.set(0, 1.25, -1);\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  update(realms) {\n    const {\n      anisotropy,\n      children,\n      history,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    const offset = 0.25 + realms.length * -0.25;\n    realms.forEach((realm, i) => {\n      const panel = new Realm({\n        ...realm,\n        anisotropy,\n        onPointer: ({ hand, isDown }) => {\n          this.setHover({ hand, realm: panel });\n          if (isDown) {\n            history.push(`/${realm.slug}`);\n          }\n        },\n      });\n      panel.position.set(\n        offset + (i * 0.5),\n        0,\n        0\n      );\n      panel.lookAt(0, 0.5, 1);\n      this.add(panel);\n    });\n  }\n}\n\nexport default Menu;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchRealms } from '@/actions/lobby';\nimport Renderer from '@/components/renderer';\nimport Floor from '@/components/lobby/floor';\nimport Menu from '@/components/lobby/menu';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      history,\n      renderer: { current: renderer },\n      fetchRealms,\n    } = this.props;\n    const scene = renderer.resetScene();\n    scene.add(new Floor());\n    this.menu = new Menu({\n      anisotropy: renderer.getMaxAnisotropy(),\n      history,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    fetchRealms({ page: 0 });\n  }\n\n  componentDidUpdate({ realms: previousRealms }) {\n    const { realms } = this.props;\n    if (realms !== previousRealms) {\n      this.menu.update(realms);\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene } = this;\n    delete scene.onBeforeRender;\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.children)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n      });\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      realms,\n    },\n  }) => ({\n    realms,\n  }),\n  {\n    fetchRealms,\n  }\n)(Lobby);\n","import * as types from './types';\nimport API from '@/services/api';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function fetchRealms({\n  page = 0,\n}) {\n  return {\n    type: types.LOBBY_FETCH_REALMS,\n    payload: API.fetch({\n      endpoint: `realms/${page}`,\n    }),\n  };\n}\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create({\n  name,\n}) {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      body: {\n        name,\n      },\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const { realm: { size, voxels: current } } = getState();\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    dispatch(generateGeometry({ size, voxels }));\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\n\nclass Picker extends Panel {\n  constructor({ anisotropy }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.draw();\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.3;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.35, renderer.height * 0.85);\n      ctx.rect(0, 0, width, height);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip].forEach(({\n      x,\n      y,\n      width,\n      height,\n    }, i) => {\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      const isStrip = i === 1;\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (isStrip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor() {\n    super();\n    this.geometry = new BufferGeometry();\n    this.material = new MeshBasicMaterial({\n      vertexColors: VertexColors,\n    });\n    this.visible = false;\n  }\n\n  resize(size) {\n    const { children, geometry, material } = this;\n    const radius = 8;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const instance = new Mesh(\n            geometry,\n            material\n          );\n          instance.matrixAutoUpdate = false;\n          instance.position.set(x * size, y * size, z * size);\n          instance.updateMatrix();\n          this.add(instance);\n        }\n      }\n    }\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    this.visible = true;\n  }\n}\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.intersects = [this.picker];\n    this.voxels = new Voxels();\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const { renderer: { room }, picker, voxels } = this;\n    if (size !== previousSize) {\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.children,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      voxels.update(geometry);\n    }\n  }\n\n  componentWillUnmount() {\n    const { renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(this.picker);\n    delete scene.onBeforeRender;\n    reset();\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        raycaster,\n        room,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = Math.floor(point[axis] - offset[axis]);\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Layout from '@/layout';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scene = ({\n  component: Component,\n  renderer,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Component {...props} renderer={renderer} />\n    )}\n  />\n);\n\nScene.propTypes = {\n  component: PropTypes.func.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nclass Root extends Component {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    return (\n      <Layout>\n        <Renderer ref={renderer} />\n        <Switch>\n          <Scene exact path=\"/\" component={Lobby} renderer={renderer} />\n          <Scene exact path=\"/:slug\" component={Realm} renderer={renderer} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default hot(module)(Root);\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Root from '@/routes';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Root />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.cdf4d0fc1592aac67598.js\");\n};"],"sourceRoot":""}